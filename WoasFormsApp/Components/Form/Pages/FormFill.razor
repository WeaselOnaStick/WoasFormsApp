@page "/Template/{TemplateId:int}/Fill"
@rendermode InteractiveServer
@inject IDatabaseAccessorService dba
@inject ISnackbar snack
@inject NavigationManager nav

@attribute [Authorize]

@if (_template == null){
    <WoasFormsApp.Components.Template.TemplateInaccessible />
}
else
{

    <PaperCenter PageTitle=@loc["FORM_FILLING_HEADER_F", TemplateTitleOrUnnamed(_template, loc)]>
        <MudForm Model="_response" @ref=form>

            <MudText Class="px-4" Typo="Typo.body1" style="font-style: italic;">@loc["CREATED_BY_F", (_template.Owner.UserName ?? "(Orphan Template)")] - @(_template.CreatedAt.ToLocalTime().ToLongDateString()) @(_template.CreatedAt.ToLocalTime().ToShortTimeString()) </MudText>
            <div class="p-4">
                <MudPaper Class="p-4 m-6 mud-background-gray">
                    <MudMarkdown Value="@(string.IsNullOrWhiteSpace(_template.Description) ? loc["NO_DESCRIPTION_MARKDOWN"] : _template.Description)"></MudMarkdown>
                </MudPaper>

            </div>

            @foreach (var answer in _response.Answers)
                {
                    <FormField Answer="answer" ReadOnly="false"/>
                }
            <div class="mt-6 px-4 m-4 align-self-center">
                <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="SubmitForm" Class="rounded-5 flex-shrink">
                    <MudText Typo="Typo.h6">@loc["SUBMIT_FORM"]</MudText>
                </MudButton>
            </div>
        </MudForm>
    </PaperCenter>

}

@code {
    MudForm form { get; set; }

    [Parameter]
    public int TemplateId { get; set; }

    private Template? _template { get; set; }

    private Response _response { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _template = await dba.GetTemplate(TemplateId);
        if (_template == null) return;
        List<ResponseAnswer> _answers = _template.Fields.Where(f => !f.Hidden).Select(f => new ResponseAnswer { Field = f }).ToList();
        _response = new Response()
            {
                Template = _template,
                Answers = _answers,
            };
    }

    private async Task SubmitForm()
    {
        var res = await dba.CreateResponse(_response);
        if (res == null)
        {
            snack.Add(loc["FORM_FILL_FAIL"], Severity.Error);
        }
        else
        {
            snack.Add(loc["FORM_FILL_SUCCESS"], Severity.Success);
            nav.NavigateTo($"/Form/{res.Id}");
        }
    }
}

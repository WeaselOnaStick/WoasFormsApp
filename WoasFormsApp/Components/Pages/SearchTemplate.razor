@page "/SearchTemplate"
@using WoasFormsApp.Components.Template
@rendermode InteractiveServer
@inject IDatabaseAccessorService dba


<PaperCenter Title="Search">
    <div style="display:block">
        <MudText Align="Align.Center" Class="p-2 m-2" Typo="Typo.h5">Templates Search</MudText>
        <MudMenu Label=@($"Search Options ({_modesCache[currentMode].DisplayName})") Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.FilterList" Class="justify-self-center p-2">
            @foreach (var kv in _modesCache)
            {
                <MudMenuItem Label=@kv.Value.DisplayName OnClick="async () => await FetchTemplates(kv.Key)" ForceLoad="true" Icon="@kv.Value.Icon"/>
            }
        </MudMenu>
        <TemplatesGallery Mode="Components.Template.TemplatesGallery.GalleryMode.CustomList" CustomTemplates="_searchResults"/>
    </div>
</PaperCenter>

@code {
    private Dictionary<TemplateOrderMode, TemplateOrderModeData> _modesCache = new();
    private List<Template>? _searchResults;
    private TemplateOrderMode defaultMode = TemplateOrderMode.Newest;

    private TemplateOrderMode currentMode = default;

    [Parameter]
    [SupplyParameterFromQuery(Name = "search")]
    public string searchString { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "author")]
    public string searchAuthor { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "tag")]
    public string searchTag { get; set; }



    protected override async Task OnInitializedAsync()
    {
        _modesCache = dba.GetTemplateOrdersData();
        currentMode = defaultMode;
        await FetchTemplates(defaultMode);
    }

    private async Task FetchTemplates(TemplateOrderMode order)
    {
        currentMode = order;
        _searchResults = new List<Template>(await dba.SearchTemplates(order, searchString, searchAuthor, searchTag));
        StateHasChanged();
    }
}

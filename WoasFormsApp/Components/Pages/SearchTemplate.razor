@page "/SearchTemplate"
@using WoasFormsApp.Components.Template
@rendermode InteractiveServer
@inject IDatabaseAccessorService dba


<PaperCenter PageTitle="@headerText">
    <div style="display: grid; justify-items: center;">

        <MudMenu 
            Label=@(string.Format("{0} ({1})", loc["SEARCH_TEMPLATE_OPTIONS"], loc[_modesCache[currentMode].DisplayName])) 
            Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.FilterList" Class="p-2 mb-6">
                @foreach (var kv in _modesCache)
                {
                    <MudMenuItem Label=@loc[kv.Value.DisplayName] OnClick="async () => await FetchTemplates(kv.Key)" ForceLoad="true" Icon="@kv.Value.Icon"/>
                }
        </MudMenu>
        <TemplatesGallery 
        Mode="Components.Template.TemplatesGallery.GalleryMode.CustomList" 
        CustomTemplates="_searchResults"/>
    </div>
</PaperCenter>

@code {
    private Dictionary<TemplateOrderMode, TemplateOrderModeData> _modesCache = new();
    private List<Template>? _searchResults;
    private TemplateOrderMode defaultMode = TemplateOrderMode.Newest;

    private TemplateOrderMode currentMode;

    [Parameter]
    [SupplyParameterFromQuery(Name = "search")]
    public string searchString { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "author")]
    public string searchAuthor { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "tag")]
    public string searchTag { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "topic")]
    public string searchTopic { get; set; }

    private string headerText = "";

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(searchString))
            headerText = loc["SEARCH_TEMPLATE_HEADER_QUERY_FORMATTED", searchString];
        else if (!string.IsNullOrWhiteSpace(searchAuthor))
            headerText = loc["SEARCH_TEMPLATE_HEADER_USER_FORMATTED", searchAuthor];
        else if (!string.IsNullOrWhiteSpace(searchTag))
            headerText = loc["SEARCH_TEMPLATE_HEADER_TAG_FORMATTED", searchTag];
        else if (!string.IsNullOrWhiteSpace(searchTopic))
            headerText = loc["SEARCH_TEMPLATE_HEADER_TOPIC_FORMATTED", loc[searchTopic]];
        else
            headerText = loc["SEARCH_TEMPLATE_HEADER_BLANK"];

        _modesCache = dba.GetTemplateOrdersData();
        currentMode = defaultMode;
        await FetchTemplates(defaultMode);
    }

    private async Task FetchTemplates(TemplateOrderMode order)
    {
        if (_searchResults == null || currentMode != order)
        {
            currentMode = order;
            _searchResults = new List<Template>(await dba.SearchTemplates(order, searchString, searchAuthor, searchTag, searchTopic));
            StateHasChanged();
        }
    }
}

@inject IDatabaseAccessorService dba

<MudGrid Justify="Justify.SpaceEvenly">
    <MudItem md="8" xs="12">
        <MudText style="white-space: nowrap; max-width: fit-content; display: inline; vertical-align: middle;" Class="pb-2 pr-4" Typo="Typo.h3">@TemplateTitleOrUnnamed(Item)</MudText>
        <MudButton StartIcon="@Icons.Material.Filled.Checklist" IconSize="Size.Large" Class="rounded-pill mx-1" Color="Color.Info" Variant="Variant.Filled" Href=@($"/Template/{Item.Id}/Fill")>Fill Form</MudButton>

        <MudText Typo="Typo.body1" Style="font-style: italic;">Created by @(Item.Owner?.UserName ?? "(Orphan Template)") on @(Item.CreatedAt.ToLocalTime().ToLongDateString()) @(Item.CreatedAt.ToLocalTime().ToShortTimeString()) </MudText>
    </MudItem>
    <MudItem md="4" xs="12">
        <div class="rounded-pill mud-theme-secondary py-2 px-6 mx-4 my-6">
            <MudText Align="Align.Center" Typo="Typo.h4" Class="rounded-pill">@Item.Topic.Title</MudText>
        </div>
        <MudGrid Spacing="1" Justify="Justify.SpaceEvenly">
            @foreach (var tag in Item.Tags)
            {
                <MudItem>
                    <MudChip T="string" Icon="@Icons.Material.Filled.Tag" Color="Color.Info" Variant="Variant.Filled">@tag.Title</MudChip>
                </MudItem>
            }

        </MudGrid>

    </MudItem>
</MudGrid>
@if (!string.IsNullOrWhiteSpace(Item.CoverImageUrl))
{
    <MudImage Src="@Item.CoverImageUrl" />
}
<div class="p-4">
    <MudPaper Class="p-4 m-6 mud-background-gray">
        <MudMarkdown Value="@(string.IsNullOrWhiteSpace(Item.Description) ? "__(No Description Provided)__" : Item.Description)"></MudMarkdown>
    </MudPaper>
</div>

@code{
    [Parameter, EditorRequired]
    required public Template Item { get; set; }

    private bool ShowAnalyticsButton = false;

    protected override async Task OnInitializedAsync()
    {
        var curUser = await dba.GetCurrentUser();
        ShowAnalyticsButton = await dba.GetCurrentUserOwnsTemplate(Item.Id);
    }
}
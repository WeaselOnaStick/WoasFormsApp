@page "/Admin/Dashboard"
@using Bogus
@rendermode InteractiveServer
@inject IDatabaseAccessorService dba
@inject UserManager<WoasFormsAppUser> userManager

@attribute [Authorize(Roles = "Admin")]

<PageTitle>Admin Control Panel</PageTitle>

<MudPaper Class="d-flex flex-column pa-4 mx-auto align-center gap-4 justify-center text-center" Style="max-width: fit-content">

    <MudText Typo="Typo.h2" Align="Align.Center">Admin Dashboard</MudText>

    <MudDataGrid T="UserRoleModel" Items="_users">
        <Columns>
            <PropertyColumn Title="Username" Property="x => x.user.UserName" />
            <PropertyColumn Title="Email" Property="x => x.user.Email" />
            <PropertyColumn Title="Owned Templates" Property="x => x.user.OwnedTemplates.Count" />
            <TemplateColumn Title="Roles">
                <CellTemplate>
                    <MudChipSet>
                        @foreach (var item in context.Item.roles)
                        {
                            <MudChip Color="Color.Error">item</MudChip>
                        }
                    </MudChipSet>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</MudPaper>

@code {
    //private MudDataGrid<UserViewModel> grid
    private List<UserRoleModel> _users;

    protected override async Task OnInitializedAsync()
    {
        var formUsers = await dba.GetAllUsers();
        if (formUsers?.Any() != true) return; //Paradox
        _users = formUsers.Select(u => new UserRoleModel
        {
            user = u,
            roles = userManager.GetRolesAsync(u).Result.ToList(),
        }).ToList();
    }

    public class UserRoleModel
    {
        public WoasFormsAppUser user { get; set; }
        public List<string> roles { get; set; }
    }
}

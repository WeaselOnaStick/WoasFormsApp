@page "/SearchTemplate"
@using WoasFormsApp.Components.Template
@rendermode InteractiveServer
@inject IDatabaseAccessorService dba


<PaperCenter PageTitle="@headerText">
    <div style="display: grid; justify-items: center;">
        <MudMenu Label=@($"Search Options ({_modesCache[currentMode].DisplayName})") Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.FilterList" Class="p-2">
            @foreach (var kv in _modesCache)
            {
                <MudMenuItem Label=@kv.Value.DisplayName OnClick="async () => await FetchTemplates(kv.Key)" ForceLoad="true" Icon="@kv.Value.Icon"/>
            }
        </MudMenu>
        <TemplatesGallery Mode="Components.Template.TemplatesGallery.GalleryMode.CustomList" CustomTemplates="_searchResults"/>
    </div>
</PaperCenter>

@code {
    private Dictionary<TemplateOrderMode, TemplateOrderModeData> _modesCache = new();
    private List<Template>? _searchResults;
    private TemplateOrderMode defaultMode = TemplateOrderMode.Newest;

    private TemplateOrderMode currentMode = default;

    [Parameter]
    [SupplyParameterFromQuery(Name = "search")]
    public string searchString { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "author")]
    public string searchAuthor { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "tag")]
    public string searchTag { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "topic")]
    public string searchTopic { get; set; }

    private string headerText = "";



    protected override async Task OnInitializedAsync()
    {
        headerText = "Template Search ({0})";
        bool UseParamInHeader(string? x, string format)
        {
            bool use = !string.IsNullOrWhiteSpace(x);
            if (use) headerText = string.Format(headerText, format);
            return use;
        }

        if (!(
            UseParamInHeader(searchString, $"\"{searchString}\"") ||
            UseParamInHeader(searchAuthor, $"By user: {searchAuthor}") ||
            UseParamInHeader(searchTag, $"By tag: {searchTag}") ||
            UseParamInHeader(searchTopic, $"By topic: {searchTopic}")))
            headerText = "Template Search";

        _modesCache = dba.GetTemplateOrdersData();
        currentMode = defaultMode;
        await FetchTemplates(defaultMode);
    }

    private async Task FetchTemplates(TemplateOrderMode order)
    {
        currentMode = order;
        _searchResults = new List<Template>(await dba.SearchTemplates(order, searchString, searchAuthor, searchTag, searchTopic));
        StateHasChanged();
    }
}

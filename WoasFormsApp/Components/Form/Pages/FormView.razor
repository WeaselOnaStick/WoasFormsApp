@page "/Form/{FormId:int}"
@rendermode InteractiveServer
@using WoasFormsApp.Components.Template
@inject IDatabaseAccessorService dba

@attribute [Authorize]

@if (_response == null || _template == null)
{
    <TemplateInaccessible />
}
else
{
    <PaperCenter PageTitle=@($"Form for Template {TemplateTitleOrUnnamed(_template)}")>
        <TemplateMetaInfo Item="@_template" />

        <MudText Typo="Typo.body2" Style="font-style: italic;">
            Form filled by @(_response.Respondent.UserName ?? "(Orphan Form)") 
            on @(_response.CreationDate.ToLocalTime().ToLongDateString()) @(_response.CreationDate.ToLocalTime().ToShortTimeString()) 
        </MudText>

        @foreach (var answer in _response.Answers.OrderBy(a => a.Field.Position))
        {
            <FormField Answer="answer" ReadOnly="true" />
        }
    </PaperCenter>   
}

@code{
    [Parameter]
    public int FormId { get; set; }

    private Response? _response { get; set; }

    private Template? _template { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _response = await dba.GetResponse(FormId);
        if (_response == null || _response.Template == null) return;
        _template = await dba.GetTemplate(_response.Template.Id);
        if (_template == null) return;
    }
}